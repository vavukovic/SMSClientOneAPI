{
	"senderType":"ONEAPI",	// Can be ONEAPI or SMPP. Default is ONEAPI. Determines if the SMS messages will be send over the 'ONEAPI' or 'SMPP' protocol.	
	"oneAPIConfig": {
		"authorization": {
		"type":"BASIC",																						// OneApi authorization type (BASIC, OAUTH)
		"username":"SmppBasicSend",																			// OneApi user name - used for BASIC auth
		"password":"SmppBasic",																				// OneApi password - used for BASIC auth
		"accessToken":"",																			 	    // OneApi access token - used for OAUTH auth
		"apiKey":"",																						// OneApi api key - used for OAUTH auth
		"apiSecret":""																		 				// OneApi api secret - used for OAUTH auth
		},	
		"smsMessagingRootUrl":"http://localhost:8080/infobip-oneapi/rest",									// Root url containing host name of the OneAPI SMS server
		"versionOneAPISMS":"1",																				// Version of OneAPI SMS you are accessing (the default is the latest version supported by that server)
		"retrieveInboundMessagesRegistrationId":"",											   			    // registrationID agreed with the OneAPI operator, used to retrieve inbound messages with 'InboundMessagesRetriever'
		"inboundMessagesRetrievingInterval":0,												           	    // interval to automatically retrieve inbound messages in milliseconds ('InboundMessageListener' has to be added)	
		"dlrRetrievingInterval":0												           			   	    // interval to automatically retrieve delivery reports in milliseconds ('DeliveryReportListener' has to be added)	
	},
	"smppConfig": {
		"systemId":"SmppBasicSend",					// smpp username
		"password":"SmppBasic",						// smpp password
		"host":"127.0.0.1",							// smpp server
		"port":9000,								// smpp server port
		"connectSMSSessionOnAddListener":true, 		// if true 'SMS' connection will be established when first DLR or MO listener will be added, if false when sending first 'SMS'. 
		"connectFlashSessionOnAddListener":false,   // if true 'Flash Notification' connection will be established when first DLR or MO listener will be added, if false when sending first 'Flash Notification'. 
		"connectHLRSessionOnAddListener":false,     // if true 'HLR' connection will be established when first DLR or MO listener will be added, if false when sending first 'HLR' request. 
		"requestExpiryTimeout":30000,				// The amount of time to wait (in ms) before an unacknowledged request expires. -1 disables.
		"keepAliveInterval":30000,					// enquire_link interval in milliseconds. enquire_link keeps the smpp channel alive.
		"systemType":"",							// Indicates the type of service associated with the message.
		"smppName":"Client.Session.0",				// smpp session name
		"windowMonitorInterval":15000,				// The amount of time to wait (in ms) between executions of monitoring the window. Must be 50%-100% of the requestExpiryTimeout value.
		"connectionTimeout":10000,					// in milliseconds
		"registeredDelivery":1						// Flag indicating if the message is a registered short message and thus if a Delivery Receipt is required upon the message attaining a final state. 0=No receipt required (non-registered delivery). 1=Receipt required (registered delivery).
	}
}

